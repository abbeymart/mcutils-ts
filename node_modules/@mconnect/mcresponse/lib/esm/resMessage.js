"use strict";
/**
 * @Author: abbeymart | Abi Akindele | @Created: 2020-07-11
 * @Company: Copyright 2020 Abi Akindele  | mConnect.biz
 * @License: All Rights Reserved | LICENSE.md
 * @Description: @mconnect/res-messages, response-messages | utility functions
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getResMessage = void 0;
const stdResMessages_1 = require("./stdResMessages");
function msgFunc(code, resCode, resMessage, msg, value) {
    return {
        code: code,
        resCode: resCode,
        resMessage: resMessage,
        value: value,
        message: msg,
    };
}
function getResMessage(msgType, options) {
    let value, code, resCode, resMessage, message;
    if (msgType && stdResMessages_1.stdResMessages[msgType]) {
        code = stdResMessages_1.stdResMessages[msgType].code;
        value = options && options.value ? options.value : stdResMessages_1.stdResMessages[msgType].value;
        resCode = stdResMessages_1.stdResMessages[msgType].resCode;
        resMessage = stdResMessages_1.stdResMessages[msgType].resMessage;
        message = options && options.message ? `${stdResMessages_1.stdResMessages[msgType].message} | ${options.message}` : stdResMessages_1.stdResMessages[msgType].message;
    }
    else {
        // use stdResMessages default response
        value = options && options.value ? options.value : stdResMessages_1.stdResMessages["unknown"].value;
        code = msgType || stdResMessages_1.stdResMessages["unknown"].code;
        resCode = stdResMessages_1.stdResMessages["unknown"].resCode;
        resMessage = stdResMessages_1.stdResMessages["unknown"].resMessage;
        message = options && options.message ? `${stdResMessages_1.stdResMessages["unknown"].message} | ${options.message}` : stdResMessages_1.stdResMessages["unknown"].message;
    }
    return msgFunc(code, resCode, resMessage, message, value);
}
exports.getResMessage = getResMessage;
//# sourceMappingURL=resMessage.js.map